!function(){"use strict";document.querySelector("#edit-profile-modal"),document.querySelectorAll(".modal");var e=document.querySelector(".profile__edit-button"),t=document.querySelector(".profile__name"),n=document.querySelector(".profile__title"),r=document.querySelector(".profile__avatar"),o=document.querySelector(".profile__add-button"),i=document.getElementById("edit-profile"),a=document.getElementById("add-card"),l=document.getElementById("update-profile"),c=(document.querySelectorAll(".modal__close-button"),document.querySelector(".profile__edit-icon")),u={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showErrorMessage",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));n.classList.add(this._errorClass),n.textContent=t,e.classList.add(this._inputErrorClass)}},{key:"_hideErrorMessage",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));t.classList.remove(this._errorClass),t.textContent="",e.classList.remove(this._inputErrorClass)}},{key:"_checkInputValidity",value:function(e){var t=e.validationMessage;e.validity.valid?this._hideErrorMessage(e):this._showErrorMessage(e,t)}},{key:"_hasInvalidInput",value:function(){return!this._inputList.every((function(e){return e.validity.valid}))}},{key:"updateButtonState",value:function(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e.updateButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var d=function(){function e(t,n,r,o,i,a,l){var c,u,s=this,f=t.name,h=t.link,d=t.likes,p=t._id,_=t.owner;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),u=function(e){s._likeButton.classList.contains("card__like-button_full")?s._api.unlikeCard(s._id).then((function(e){s._likes=e.likes,s._updateLikesCount(),s._likeButton.classList.remove("card__like-button_full")})).catch((function(e){console.log("Cannot unlike the card: Error ".concat(e))})):s._api.likeCard(s._id).then((function(e){s._likes=e.likes,s._updateLikesCount(),s._likeButton.classList.add("card__like-button_full")})).catch((function(e){console.log("Cannot like the card: Error ".concat(e))}))},(c="_handleToggleLike")in this?Object.defineProperty(this,c,{value:u,enumerable:!0,configurable:!0,writable:!0}):this[c]=u,this._title=f,this._imageUrl=h,this._cardSelector=r,this._handleCardClick=o,this._likes=d,this._api=i,this._id=p,this._userId=n,this._owner=_,this._handleCardDeleteClick=a,this._handleDeleteCardFormSubmit=l}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){var e=this;return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".card__image"),this._cardTitle=this._element.querySelector(".card__title"),this._deleteButton=this._element.querySelector(".card__close-button"),this._likeButton=this._element.querySelector(".card__like-button"),this._likeDiv=this._element.querySelector(".card__like-count"),this._cardImage.src=this._imageUrl,this._cardImage.alt=this._title,this._cardTitle.textContent=this._title,this._likeDiv.textContent=this._likes.length,this._setEventListeners(),this._likes.forEach((function(t){t._id===e._userId&&e._likeButton.classList.add("card__like-button_full")})),this._userId!==this._owner._id&&this._deleteButton.remove(),this._element}},{key:"_updateLikesCount",value:function(){this._likeDiv.textContent=this._likes.length}},{key:"_setEventListeners",value:function(){var e=this;this._cardImage.addEventListener("click",(function(){e._handleCardClick({url:e._imageUrl,title:e._title})})),this._deleteButton.addEventListener("click",(function(t){e._handleCardDeleteClick(e._id,e._element)})),this._likeButton.addEventListener("click",this._handleToggleLike)}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(e){this.clear();for(var t=e.length-1;t>=0;t--)this._renderer(e[t])}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var v=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),m(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),m(this,"_handleClickClose",(function(e){(e.target.classList.contains("modal__close-button")||e.target.classList.contains("modal_open"))&&n.close()})),this._element=document.querySelector(t),this._closeButton=this._element.querySelector("button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._setEventListeners(),this._element.classList.add("modal_open")}},{key:"close",value:function(){this._removeEventListeners(),this._element.classList.remove("modal_open")}},{key:"_setEventListeners",value:function(){this._element.addEventListener("mousedown",this._handleClickClose),document.addEventListener("keydown",this._handleEscClose)}},{key:"_removeEventListeners",value:function(){this._element.removeEventListener("mousedown",this._handleClickClose),document.removeEventListener("keydown",this._handleEscClose)}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=E(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function E(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}function w(e,t){return w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},w(e,t)}function S(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._imageEl=t._element.querySelector(".modal__image"),t._imageCaption=t._element.querySelector(".modal__caption"),t}return t=a,(n=[{key:"open",value:function(e){this._imageEl.src=e.url,this._imageEl.alt=e.title,this._imageCaption.textContent=e.title,k(C(a.prototype),"open",this).call(this)}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(v);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=B(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},P.apply(this,arguments)}function B(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}function I(e,t){return I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},I(e,t)}function R(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return R(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._form=n._element.querySelector("form"),n._closeButton=n._element.querySelector("button"),n._handleFormSubmit=e,n._allInputs=n._element.querySelectorAll("input"),n._submitButon=n._element.querySelector('button[type="submit"]'),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._allInputs.forEach((function(t){var n=t.name,r=t.value;e[n]=r})),e}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitButon.textContent="Saving...",e._handleFormSubmit(e._getInputValues())})),P(T(a.prototype),"_setEventListeners",this).call(this)}},{key:"close",value:function(){P(T(a.prototype),"close",this).call(this),this._form.reset(),this._submitButon.textContent="Save"}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(v);function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=A(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},D.apply(this,arguments)}function A(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=M(e)););return e}function N(e,t){return N=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},N(e,t)}function V(e,t){if(t&&("object"===U(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function M(e){return M=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},M(e)}var F=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&N(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=M(r);if(o){var n=M(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return V(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._form=n._element.querySelector("form"),n._handleConfirm=t,n}return t=a,(n=[{key:"open",value:function(e,t){this._cardId=e,this._cardElement=t,D(M(a.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleConfirm(e._cardId,e._cardElement)})),D(M(a.prototype),"_setEventListeners",this).call(this)}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(v);function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var J=function(){function e(t,n){var r=t.userNameElement,o=t.userTitleElement,i=t.userAvatarElement,a=n.avatar,l=n._id;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userNameEl=r,this._userTitleEl=o,this._avatarEl=i,this._avatar=a,this._id=l}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._userNameEl.textContent,title:this._userTitleEl.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar,o=e._id;this._userNameEl.textContent=t,this._userTitleEl.textContent=n,this._avatarEl.src=r,this._id=o}}])&&H(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var $,G,K=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_handleServerResponse",value:function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(t){return e._handleServerResponse(t)}))}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then(this._handleServerResponse)}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(t){return e._handleServerResponse(t)}))}},{key:"addCard",value:function(e){var t=e.name,n=e.link;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:n})}).then(this._handleServerResponse)}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._handleServerResponse(e)}))}},{key:"likeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._handleServerResponse)}},{key:"unlikeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleServerResponse)}},{key:"updateProfilePicture",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleServerResponse)}}])&&z(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function Q(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var W=new _((function(e){oe(e)}),".cards-container"),X=new O("#image-modal"),Y=new q((function(e){var t=e.name,n=e.about;ce.setUserInfo({name:t,about:n}).then((function(e){G.setUserInfo(e),Y.close()})).catch((function(e){console.log("can't set user info: ".concat(e))}))}),"#edit-profile-modal");Y.setEventListeners();var Z=new q((function(e){var t=e.title,n=e.url;ce.addCard({name:t,link:n}).then((function(e){null!=oe&&oe(e),Z.close()})).catch((function(e){console.log("can't add new card: ".concat(e))}))}),"#add-card-modal");Z.setEventListeners();var ee=new q((function(e){var t=e.url;ce.updateProfilePicture(t).then((function(e){G.setUserInfo(e),ee.close()})).catch((function(e){console.log("can't update user profile picture: ".concat(e))}))}),"#update-profile-modal");ee.setEventListeners();var te=new f(u,a),ne=new f(u,i),re=new f(u,l);te.enableValidation(),ne.enableValidation(),re.enableValidation();var oe=function(e){var t=new d(e,$._id,"#card-template",ie,ce,ae,le).generateCard();W.addItem(t)};function ie(e){X.open(e)}function ae(e,t){ue.open(e,t)}function le(e,t){ce.deleteCard(e).then((function(){t.remove(),ue.close()})).catch((function(e){console.log("can't delete card: ".concat(e))}))}e.addEventListener("click",(function(){ne.updateButtonState();var e=G.getUserInfo(),t=i.name,n=i.about;t.value=e.userName,n.value=e.title,Y.open()})),o.addEventListener("click",(function(){te.updateButtonState(),Z.open()})),c.addEventListener("click",(function(){re.updateButtonState(),ee.open()}));var ce=new K({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"bdbcf068-f0a2-4438-8115-013f3ee9f311","Content-Type":"application/json"}});Promise.all([ce.getUserInfo(),ce.getInitialCards()]).then((function(e){var o,i,a=(i=2,function(e){if(Array.isArray(e))return e}(o=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,l=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){l=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(l)throw o}}return i}}(o,i)||function(e,t){if(e){if("string"==typeof e)return Q(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Q(e,t):void 0}}(o,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=a[0],c=a[1];(G=new J({userNameElement:t,userTitleElement:n,userAvatarElement:r},$=l)).setUserInfo($),W.renderItems(c)})).catch((function(e){console.log("can't get inital cards: ".concat(e))}));var ue=new F("#delete-card-modal",le);ue.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,